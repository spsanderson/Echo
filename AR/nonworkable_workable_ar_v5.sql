/*
***********************************************************************
File: nonworkable_workable_ar_v4.sql

Input Parameters:
	None

Tables/Views:
	para.dbo.pt_accounting_reporting_alt_backup
	sms.dbo.cw_prsup_tbl
	sms.dbo.cw_prwkl_tbl
	echoloaderdbp.uhmc.sbuh.stonybrook.edu.echo_active.dbo.patientdemographics
	echoloaderdbp.uhmc.sbuh.stonybrook.edu.echo_active.dbo.accountcomments
	SMS.DBO.c_Rep_Number_Master_List_tbl
	SMS.DBO.c_tableau_insurance_tbl
	SMS.dbo.Pt_Accounting_Reporting_ALT_for_Tableau
	SMS.dbo.c_Finthrive_Last_Bill_Date_tbl

Creates Table/View:
	None

Functions:
	None

Author: Steven P. Sanderson II, MPH

Department: Patient Financial Services

Purpose/Description
	Define the department, and workable status of an account in Active AR
	WHERE A.Pt_Type != 'K'
	AND A.FC != 'X'
	AND A.Tot_Chgs > 0
	AND A.Active_Archive = 'ACTIVE'
	AND (
		A.Balance != 0
		OR (
			A.BALANCE = 0
			AND COALESCE(A.[Worklist on Ins1], A.[Worklist on Ins2], A.[Worklist on Ins3], A.[Worklist on Ins4], A.[Worlist on Pt]) IS NOT NULL
		)
	)

Revision History:
Date		Version		Description
----		----		----
2025-03-03	v1			Initial Creation
2025-04-29	v2			Add new logic for the worklisttest table
2025-04-30	v3			Add CYCLE_OF_WL to get worklist cycles,
						Add EXPECTED_PAYEMNT in order to get AR DAYS
***********************************************************************
*/

DROP TABLE IF EXISTS #TEMPA;
	DECLARE @SNAP_DATE DATE;

SET @SNAP_DATE = (
		SELECT MAX(EOMonth_Timestamp)
		FROM PARA.[dbo].[Pt_Accounting_Reporting_ALT_Backup]
		);

DECLARE @PRSUP_FC_DATE DATETIME;
DECLARE @CW_FC_DATE DATETIME;

SET @PRSUP_FC_DATE = (
		SELECT MAX(FileCreated)
		FROM SMS.DBO.CW_PRSUP_TBL
		);
SET @CW_FC_DATE = (
		SELECT MAX(FileCreated)
		FROM SMS.DBO.CW_PRWKL_tbl
		);

-- LAST WORKLIST ASSIGNMENT DEPT
DROP TABLE IF EXISTS #WORKLIST_DEPT_TBL;
	SELECT A.[WKLST ID],
		A.[WORKLIST DESC],
		[DEPARTMENT] = COALESCE(B.[GROUP NAME], C.[GROUP NAME]),
		[SUPV_ID] = COALESCE(B.[SUPV ID], C.[SUPV ID])
	INTO #WORKLIST_DEPT_TBL
	FROM SMS.DBO.CW_PRWKL_tbl AS A
	LEFT JOIN SMS.DBO.CW_PRSUP_tbl AS B ON A.COLLID = B.[SUPV ID]
		AND B.FileCreated = @PRSUP_FC_DATE
	LEFT JOIN SMS.DBO.CW_PRSUP_tbl AS C ON A.[SUPV ID] = C.[SUPV ID]
		AND C.FileCreated = @PRSUP_FC_DATE
	WHERE A.FileCreated = @CW_FC_DATE
	ORDER BY A.[WKLST ID];

-- GET REP NUMBER DEPARMTNET ASSIGNMENTS
DROP TABLE IF EXISTS #PT_REP_DEPT;
	SELECT pt_rep_no = CAST([PATIENT REP NUMBERS] AS VARCHAR),
		department = Department
	INTO #PT_REP_DEPT
	FROM SMS.DBO.c_Rep_Number_Master_List_tbl;

UPDATE #PT_REP_DEPT
SET department = 'DENIALS AND APPEALS'
WHERE department = 'Denials & Appeals';

-- LAST PATIENT BILL DATE
DROP TABLE IF EXISTS #LAST_PT_BILL_DATE_TBL;
SELECT [PT_NO] = CAST([PA-PT-NO-WOSCD] AS VARCHAR) + CAST([PA-PT-NO-SCD-1] AS VARCHAR),
	[LAST_PT_BILL_DATE] = COALESCE([PA-LAST-NON-ACTV-PT-BL-DATE], [PA-LAST-ACTV-PT-BL-DATE]),
	[ADMIT_DATE] = [PA-ADM-DATE],
	[DSCH_DATE] = [PA-DSCH-DATE],
	[PA_CTL_PAA_XFER_DATE] = [PA-CTL-PAA-XFER-DATE]
INTO #LAST_PT_BILL_DATE_TBL
FROM [ECHOLOADERDBP.UHMC.SBUH.STONYBROOK.EDU].ECHO_ACTIVE.DBO.PATIENTDEMOGRAPHICS;

-- HAS DELETED BILL FROM SCUBBER SVC CD 38008207
DROP TABLE IF EXISTS #CLAIM_DELETED_TBL;
SELECT DISTINCT PT_NO = CAST([PA-PT-NO-WOSCD] AS VARCHAR) + CAST([PA-PT-NO-SCD-1] AS varchar)
INTO #CLAIM_DELETED_TBL
FROM [ECHOLOADERDBP.UHMC.SBUH.STONYBROOK.EDU].ECHO_ACTIVE.DBO.ACCOUNTCOMMENTS
WHERE [PA-SMART-SVC-CD-WOSCD] = '3800820'
AND [PA-SMART-SVC-CD-SCD] = '7'

-- BUCKET INS CODE LAST FOLLOW UP DATE
DROP TABLE IF EXISTS #TEMP_BI;
DROP TABLE IF EXISTS #BUCKET_INS_CODE_LAST_FU_DATE;

SELECT PT_NO = CAST([PA-PT-NO-WOSCD] AS VARCHAR) + CAST([PA-PT-NO-SCD-1] AS VARCHAR),
	[PA_CWI_LAST_CMPLT_FOL_DATE] = [PA-CWI-LAST-CMPLT-FOL-DATE],
	[PA_CWI_LAST_DMND_FOL_DATE] = [PA-CWI-LAST-DMND-FOL-DATE],
	[PA_CWI_UNIT_DATE] = ISNULL([PA-CWI-UNIT-DATE], ''),
	[INS_CODE_LAST_FOLLOW_UP_DATE] = CASE
		WHEN [PA-CWI-LAST-CMPLT-FOL-DATE] = '1960-01-01 00:00:00.000'
			THEN [PA-CWI-LAST-DMND-FOL-DATE]
		ELSE [PA-CWI-LAST-CMPLT-FOL-DATE]
		END,
	[INS_CD] = CASE
		WHEN LTRIM(RTRIM([PA-CWI-PYR-CO-CD])) = ''
			THEN '*'
		WHEN LTRIM(RTRIM([PA-CWI-PYR-CO-CD])) != ''
			AND LEN([PA-CWI-PYR-PLAN-NO]) = 1
			THEN LTRIM(RTRIM([PA-CWI-PYR-CO-CD])) + CAST('0' AS VARCHAR) + CAST([PA-CWI-PYR-PLAN-NO] AS VARCHAR)
		WHEN LTRIM(RTRIM([PA-CWI-PYR-CO-CD])) != ''
			AND LEN([PA-CWI-PYR-PLAN-NO]) != 1
			THEN LTRIM(RTRIM([PA-CWI-PYR-CO-CD])) + CAST([PA-CWI-PYR-PLAN-NO] AS VARCHAR)
		WHEN LEN([PA-CWI-PYR-PLAN-NO]) = 1
			THEN CAST('0' AS VARCHAR) + CAST([PA-CWI-PYR-PLAN-NO] AS VARCHAR)
		ELSE CAST([PA-CWI-PYR-PLAN-NO] AS VARCHAR)
		END
INTO #TEMP_BI
FROM [ECHOLOADERDBP.UHMC.SBUH.STONYBROOK.EDU].ECHO_ACTIVE.DBO.COLLECTORWORKSTATION;

ALTER TABLE #TEMP_BI
ADD REC_NO INT;

SELECT PT_NO,
	PA_CWI_LAST_CMPLT_FOL_DATE,
	PA_CWI_LAST_DMND_FOL_DATE,
	PA_CWI_UNIT_DATE,
	INS_CODE_LAST_FOLLOW_UP_DATE,
	INS_CD,
	[REC_NO] = ROW_NUMBER() OVER(
		PARTITION BY PT_NO, PA_CWI_UNIT_DATE, INS_CD
		ORDER BY INS_CODE_LAST_FOLLOW_UP_DATE DESC
	)
INTO #BUCKET_INS_CODE_LAST_FU_DATE
FROM #TEMP_BI;

-- ACCT LEVEL LAST FOLLOW UP DATE
DROP TABLE IF EXISTS #TEMP_AL;
DROP TABLE IF EXISTS #ACCT_LAST_FU_DATE;

SELECT PT_NO = CAST([PA-PT-NO-WOSCD] AS VARCHAR) + CAST([PA-PT-NO-SCD-1] AS VARCHAR),
	[PA_CWI_LAST_CMPLT_FOL_DATE] = [PA-CWI-LAST-CMPLT-FOL-DATE],
	[PA_CWI_LAST_DMND_FOL_DATE] = [PA-CWI-LAST-DMND-FOL-DATE],
	[PA_CWI_UNIT_DATE] = ISNULL([PA-CWI-UNIT-DATE], ''),
	[ACCT_LAST_FOLLOW_UP_DATE] = CASE
		WHEN [PA-CWI-LAST-CMPLT-FOL-DATE] = '1960-01-01 00:00:00.000'
			THEN [PA-CWI-LAST-DMND-FOL-DATE]
		ELSE [PA-CWI-LAST-CMPLT-FOL-DATE]
		END
INTO #TEMP_AL
FROM [ECHOLOADERDBP.UHMC.SBUH.STONYBROOK.EDU].ECHO_ACTIVE.DBO.COLLECTORWORKSTATION
WHERE [PA-CWI-PYR-CO-CD] = ' '
AND [PA-CWI-PYR-PLAN-NO] = '0'
--AND [PA-CWI-LAST-WKLST-ID] != '      '
AND [PA-CWI-LAST-ACTV-DATE] != '1960-01-01 00:00:00.000';

ALTER TABLE #TEMP_AL
ADD REC_NO INT;

SELECT PT_NO,
	PA_CWI_LAST_CMPLT_FOL_DATE,
	PA_CWI_LAST_DMND_FOL_DATE,
	PA_CWI_UNIT_DATE,
	ACCT_LAST_FOLLOW_UP_DATE,
	[REC_NO] = ROW_NUMBER() OVER(
		PARTITION BY PT_NO, PA_CWI_UNIT_DATE
		ORDER BY ACCT_LAST_FOLLOW_UP_DATE DESC
	)
INTO #ACCT_LAST_FU_DATE
FROM #TEMP_AL;

-- Custom worklist logic
DROP TABLE IF EXISTS #CUSTOM_WL_TBL;
SELECT A.pt_no,
	admit_date = CAST(A.admit_date AS DATE),
	dsch_date = CAST(A.dsch_date AS DATE),
	unit_date = CAST(A.unit_date AS DATE),
	A.unit_no,
	A.ins1_cd,
	A.ins2_cd,
	A.ins3_cd,
	A.ins4_cd,
	assigned_worklist_id = COALESCE(A.UNIT_INSLVL_WL, A.UNITLVL_WL, A.ACCT_INSLVL_WL, A.PTLVL_WL, A.ACCTLVL_WL),
	worklist_desc = B.[WORKLIST DESC],
	department = COALESCE(C.[GROUP NAME], D.[GROUP NAME]),
	supv_id = COALESCE(C.[SUPV ID], D.[SUPV ID])
INTO #CUSTOM_WL_TBL
FROM sms.dbo.worklisttest AS A
LEFT JOIN SMS.DBO.CW_PRWKL_tbl AS B ON COALESCE(A.UNIT_INSLVL_WL, A.UNITLVL_WL, A.ACCT_INSLVL_WL, A.PTLVL_WL, A.ACCTLVL_WL) = B.[WKLST ID]
LEFT JOIN SMS.DBO.CW_PRSUP_tbl AS C ON B.COLLID = C.[SUPV ID]
	AND C.FileCreated = @PRSUP_FC_DATE
LEFT JOIN SMS.dbo.CW_PRSUP_tbl AS D ON B.[SUPV ID] = D.[SUPV ID]
	AND D.FileCreated = @PRSUP_FC_DATE
WHERE COALESCE(A.UNIT_INSLVL_WL, A.UNITLVL_WL, A.ACCT_INSLVL_WL, A.PTLVL_WL, A.ACCTLVL_WL) IS NOT NULL
AND B.FileCreated = @CW_FC_DATE;

-- TABLE WITH INDICATORS
DROP TABLE IF EXISTS #INDICATOR_TBL;
SELECT DISTINCT A.PT_NO,
    A.UNIT_NO,
    A.UNIT_DATE,
    A.ADMIT_DATE,
    A.DSCH_DATE,
    A.BALANCE,
    A.PT_BALANCE,
    A.INS1_BALANCE,
    A.INS2_BALANCE,
    A.INS3_BALANCE,
    A.INS4_BALANCE,
    A.PYR1_PAY_AMT,
    A.PYR2_PAY_AMT,
    A.PYR3_PAY_AMT,
    A.PYR4_PAY_AMT,
    A.[FILE],
    A.AGE_BUCKET,
    A.INS1_CD,
    A.INS2_CD,
    A.INS3_CD,
    A.INS4_CD,
    A.[WORKLIST NAME ON INS1],
    A.[WORKLIST NAME ON INS2],
    A.[WORKLIST NAME ON INS3],
    A.[WORKLIST NAME ON INS4],
	A.[Worklist NAME ON PT],
	[ASSIGNED_WORKLIST_ID] = CWT.assigned_worklist_id,
    [WORKLISTED] = CASE 
        WHEN COALESCE(CWT.ASSIGNED_WORKLIST_ID, A.[WORKLIST NAME ON INS1], A.[WORKLIST NAME ON INS2], A.[WORKLIST NAME ON INS3], A.[WORKLIST NAME ON INS4], A.[Worklist Name on Pt]) IS NULL
            THEN 'NO'
        ELSE 'YES'
        END,
    A.FC,
    A.PT_REPRESENTATIVE,
    A.ACCT_TYPE,
    A.FIRST_INS_BL_DATE,
	A.[1st_Bl_Exported_Date],
    A.[LAST ACTIVITY CODE],
    A.[LAST ACTIVITY DATE],
    A.PAYER_ORGANIZATION,
    A.PRODUCT_CLASS,
	A.IFPJOC,
	WORKLIST,
	[WORKLIST NAME],
	A.INS1_LAST_BL_DATE,
	A.INS2_LAST_BL_DATE,
	A.INS3_LAST_BL_DATE,
	A.INS4_LAST_BL_DATE,
	A.INS1_LAST_PAID,
	A.INS2_LAST_PAID,
	A.INS3_LAST_PAID,
	A.INS4_LAST_PAID,
    [BUCKET_INS_INDICATOR] = CASE -- CHANGE FROM INS_BUCKETS
        WHEN A.INS1_BALANCE = 0
            AND A.INS2_BALANCE = 0
            AND A.INS3_BALANCE = 0
            AND A.INS4_BALANCE = 0
            THEN 'PT BALANCE'
        WHEN A.INS1_BALANCE = 0
            AND A.INS2_BALANCE = 0
            AND A.INS3_BALANCE = 0
            AND A.INS4_BALANCE != 0
            THEN 'QUATERNARY'
        WHEN A.INS1_BALANCE = 0
            AND A.INS2_BALANCE = 0
            AND A.INS3_BALANCE != 0
            THEN 'TERTIARY'
        WHEN A.INS1_BALANCE = 0
            AND A.INS2_BALANCE != 0
            THEN 'SECONDARY'
        WHEN A.INS1_BALANCE != 0
            THEN 'PRIMARY'
        ELSE 'REVIEW'
        END,
    [BUCKET_INS_CODE] = CASE
        WHEN A.INS1_BALANCE = 0
            AND A.INS2_BALANCE = 0
            AND A.INS3_BALANCE = 0
            AND A.INS4_BALANCE = 0
            THEN '*'
        WHEN A.INS1_BALANCE = 0
            AND A.INS2_BALANCE = 0
            AND A.INS3_BALANCE = 0
            AND A.INS4_BALANCE != 0
            THEN A.INS4_CD
        WHEN A.INS1_BALANCE = 0
            AND A.INS2_BALANCE = 0
            AND A.INS3_BALANCE != 0
            THEN A.INS3_CD
        WHEN A.INS1_BALANCE = 0
            AND A.INS2_BALANCE != 0
            THEN A.INS2_CD
        WHEN A.INS1_BALANCE != 0
            THEN A.INS1_CD
        ELSE 'REVIEW'
        END,
    [BUCKET_BALANCE] = CASE 
        WHEN A.INS1_BALANCE = 0
            AND A.INS2_BALANCE = 0
            AND A.INS3_BALANCE = 0
            AND A.INS4_BALANCE = 0
            THEN A.Pt_Balance
        WHEN A.INS1_BALANCE = 0
            AND A.INS2_BALANCE = 0
            AND A.INS3_BALANCE = 0
            AND A.INS4_BALANCE != 0
            THEN A.INS4_BALANCE
        WHEN A.INS1_BALANCE = 0
            AND A.INS2_BALANCE = 0
            AND A.INS3_BALANCE != 0
            THEN A.INS3_BALANCE
        WHEN A.INS1_BALANCE = 0
            AND A.INS2_BALANCE != 0
            THEN A.INS2_BALANCE
        WHEN A.INS1_BALANCE != 0
            THEN A.INS1_BALANCE
        ELSE 'REVIEW'
        END,
	[BUCKET_PAYER_HEALTH_PLAN] = CASE
		WHEN A.INS1_BALANCE = 0
            AND A.INS2_BALANCE = 0
            AND A.INS3_BALANCE = 0
            AND A.INS4_BALANCE = 0
			AND A.Pt_Balance != 0
            THEN 'SELF PAY'
		WHEN A.INS1_BALANCE = 0
            AND A.INS2_BALANCE = 0
            AND A.INS3_BALANCE = 0
            AND A.INS4_BALANCE != 0
            THEN (SELECT Z.PAYER_ORGANIZATION FROM SMS.dbo.c_tableau_insurance_tbl AS Z WHERE Z.code = A.INS4_CD AND ACTIVE_IND = 'ACTIVE')
		WHEN A.INS1_BALANCE = 0
            AND A.INS2_BALANCE = 0
            AND A.INS3_BALANCE != 0
            THEN (SELECT Z.PAYER_ORGANIZATION FROM SMS.dbo.c_tableau_insurance_tbl AS Z WHERE Z.code = A.INS3_CD  AND ACTIVE_IND = 'ACTIVE')
		WHEN A.INS1_BALANCE = 0
            AND A.INS2_BALANCE != 0
            THEN (SELECT Z.PAYER_ORGANIZATION FROM SMS.dbo.c_tableau_insurance_tbl AS Z WHERE Z.code = A.INS2_CD  AND ACTIVE_IND = 'ACTIVE')
        WHEN A.INS1_BALANCE != 0
            THEN (SELECT Z.PAYER_ORGANIZATION FROM SMS.dbo.c_tableau_insurance_tbl AS Z WHERE Z.code = A.INS1_CD  AND ACTIVE_IND = 'ACTIVE')
        ELSE 'REVIEW'
		END,
	[BUCKET_INS_CODE_LAST_BILLED_DATE] = CASE
		WHEN A.INS1_BALANCE = '0'
			AND A.INS2_BALANCE = '0'
			AND A.INS3_BALANCE = '0'
			AND A.INS4_BALANCE = '0'
            THEN COALESCE(
				A.FIRST_INS_BL_DATE,
				(
					SELECT TOP 1 Z.LAST_PT_BILL_DATE
					FROM #LAST_PT_BILL_DATE_TBL AS Z
					WHERE A.PT_NO = Z.PT_NO
						AND Z.ADMIT_DATE = Z.ADMIT_DATE
						AND Z.DSCH_DATE = A.DSCH_DATE
						AND Z.PA_CTL_PAA_XFER_DATE = A.PA_CTL_PAA_XFER_DATE
				)
			)
		WHEN A.INS1_BALANCE = '0'
			AND A.INS2_BALANCE = '0'
			AND A.INS3_BALANCE != '0'
			THEN A.INS3_LAST_BL_DATE
		WHEN A.INS1_BALANCE = '0'
			AND A.INS2_BALANCE != '0'
			THEN A.INS2_LAST_BL_DATE
		WHEN A.INS1_BALANCE != '0'
			THEN A.INS1_LAST_BL_DATE
		ELSE NULL
		END,
	[BUCKET_INS_CODE_LAST_EXPORTED_DATE] = CASE
		-- BUCKET INS INDICATOR PRIMARY
		WHEN A.INS1_BALANCE != 0
			AND ISNULL(A.INS1_CD, '') = ISNULL(FLBD.INS1_CD, '')
			THEN ISNULL(FLBD.INS1_LAST_FINTHRIVE_BILL_DATE, A.[1ST_BL_EXPORTED_DATE])
		WHEN A.INS1_BALANCE = 0
			AND A.INS2_BALANCE != 0
			AND ISNULL(A.INS2_CD, '') = ISNULL(FLBD.INS2_CD, '')
			THEN FLBD.INS2_LAST_FINTHRIVE_BILL_DATE
		WHEN A.INS1_BALANCE = 0
			AND A.INS2_BALANCE = 0
			AND A.INS3_BALANCE != 0
			AND ISNULL(A.INS3_CD, '') = ISNULL(FLBD.INS3_CD, '')
			THEN FLBD.INS3_LAST_FINTHRIVE_BILL_DATE
		WHEN A.INS1_BALANCE = 0
			AND A.INS2_BALANCE = 0
			AND A.INS3_BALANCE = 0
			AND A.INS4_BALANCE != 0
			AND ISNULL(A.INS4_CD, '') = ISNULL(FLBD.INS4_CD, '')
			THEN FLBD.INS4_LAST_FINTHRIVE_BILL_DATE
		ELSE NULL
		END,
		CLAIM_DELETED_IND = CASE WHEN CD.PT_NO IS NOT NULL THEN 1 ELSE 0 END,
		[BUCKET_INS_CODE_LAST_FOLLOW_UP_DATE] = BICLFD.INS_CODE_LAST_FOLLOW_UP_DATE,
		[ACCT_LAST_FOLLOW_UP_DATE] = ALFD.ACCT_LAST_FOLLOW_UP_DATE,
		DEPARTMENT = COALESCE(CWT.DEPARTMENT, WDT.DEPARTMENT, PRD.DEPARTMENT),
		A.[RESPONSIBLE COLLECTOR],
		[SUPERVISOR] = COALESCE(CWT.SUPV_ID, WDT.SUPV_ID),
		[EXPECTED_PAYMENT] = A.Expected_Payment
INTO #INDICATOR_TBL
FROM SMS.dbo.Pt_Accounting_Reporting_ALT_for_Tableau AS A
LEFT JOIN SMS.dbo.c_Finthrive_Last_Bill_Date_tbl AS FLBD ON A.Pt_No = FLBD.pt_no
	AND ISNULL(A.Ins1_Cd, '') = ISNULL(FLBD.Ins1_Cd, '')
	AND ISNULL(A.Ins2_Cd, '') = ISNULL(FLBD.Ins2_Cd, '')
	AND ISNULL(A.Ins3_Cd, '') = ISNULL(FLBD.Ins3_Cd, '')
	AND ISNULL(A.Ins4_Cd, '') = ISNULL(FLBD.Ins4_Cd, '')
	AND A.Dsch_Date = FLBD.Dsch_Date
LEFT JOIN #CLAIM_DELETED_TBL AS CD ON A.PT_NO = CD.PT_NO
LEFT JOIN #WORKLIST_DEPT_TBL AS WDT ON COALESCE(A.[WORKLIST ON INS1], A.[WORKLIST ON INS2], A.[WORKLIST ON INS3], A.[WORKLIST ON INS4], A.[Worklist on Pt]) = WDT.[WKLST ID]
LEFT JOIN #CUSTOM_WL_TBL AS CWT ON A.Pt_No = CWT.pt_no
	AND ISNULL(A.Unit_Date, '') = ISNULL(CWT.unit_date, '')
LEFT JOIN #PT_REP_DEPT AS PRD ON A.Pt_Representative = PRD.pt_rep_no
LEFT JOIN #ACCT_LAST_FU_DATE AS ALFD ON A.Pt_NO = ALFD.PT_NO
	AND ALFD.REC_NO = 1
	AND ISNULL(A.Unit_Date, '1900-01-01 00:00:00.000') = ALFD.PA_CWI_UNIT_DATE
LEFT JOIN #BUCKET_INS_CODE_LAST_FU_DATE AS BICLFD ON A.PT_NO = BICLFD.PT_NO
	AND (
		(
			A.INS1_BALANCE = 0
			AND A.INS2_BALANCE = 0
			AND A.INS3_BALANCE = 0
			AND A.INS4_BALANCE = 0
			AND BICLFD.INS_CD = '*'
			AND ISNULL(A.UNIT_DATE, '') = BICLFD.PA_CWI_UNIT_DATE
			AND BICLFD.REC_NO = 1
		)
		OR (
			A.INS1_BALANCE = 0
			AND A.INS2_BALANCE = 0
			AND A.INS3_BALANCE = 0
			AND A.INS4_BALANCE != 0
			AND A.Ins4_Cd = BICLFD.INS_CD
			AND ISNULL(A.UNIT_DATE, '') = BICLFD.PA_CWI_UNIT_DATE
			AND BICLFD.REC_NO = 1
		)
		OR (
			A.INS1_BALANCE = 0
			AND A.INS2_BALANCE = 0
			AND A.INS3_BALANCE != 0
			AND A.INS3_CD = BICLFD.INS_CD
			AND ISNULL(A.UNIT_DATE, '') = BICLFD.PA_CWI_UNIT_DATE
			AND BICLFD.REC_NO = 1
		)
		OR (
			A.INS1_BALANCE = 0
			AND A.INS2_BALANCE != 0
			AND A.INS2_CD = BICLFD.INS_CD
			AND ISNULL(A.UNIT_DATE, '') = BICLFD.PA_CWI_UNIT_DATE
			AND BICLFD.REC_NO = 1
		)
		OR (
			A.INS1_BALANCE != 0
			AND A.INS1_CD = BICLFD.INS_CD
			AND ISNULL(A.UNIT_DATE, '') = BICLFD.PA_CWI_UNIT_DATE
			AND BICLFD.REC_NO = 1
		)
	)
WHERE A.Pt_Type != 'K'
AND A.FC != 'X'
AND A.Tot_Chgs > 0
AND A.Active_Archive = 'ACTIVE'
AND (
    A.Balance != 0
    OR (
        A.BALANCE = 0
        AND COALESCE(A.[Worklist on Ins1], A.[Worklist on Ins2], A.[Worklist on Ins3], A.[Worklist on Ins4], A.[Worklist on Pt]) IS NOT NULL
    )
)

-- Create workable not workable categories and departments
DROP TABLE IF EXISTS #INITIAL_DEPARTMENT_TBL;
SELECT PT_NO,
	UNIT_NO,
	UNIT_DATE,
	ADMIT_DATE,
	DSCH_DATE,
	BALANCE,
	PT_BALANCE,
	INS1_BALANCE,
	INS2_BALANCE,
	INS3_BALANCE,
	INS4_BALANCE,
	PYR1_PAY_AMT,
	PYR2_PAY_AMT,
	PYR3_PAY_AMT,
	PYR4_PAY_AMT,
	[FILE],
	AGE_BUCKET,
	INS1_CD,
	INS2_CD,
	INS3_CD,
	INS4_CD,
	[WORKLIST NAME ON INS1],
	[WORKLIST NAME ON INS2],
	[WORKLIST NAME ON INS3],
	[WORKLIST NAME ON INS4],
	[Worklist NAME ON PT],
	[ASSIGNED_WORKLIST_ID],
	WORKLISTED,
	FC,
	PT_REPRESENTATIVE,
	ACCT_TYPE,
	FIRST_INS_BL_DATE,
	[1ST_BL_EXPORTED_DATE],
	[LAST ACTIVITY CODE],
	[LAST ACTIVITY DATE],
	PAYER_ORGANIZATION,
	PRODUCT_CLASS,
	IFPJOC,
	WORKLIST,
	[WORKLIST NAME],
	INS1_LAST_BL_DATE,
	INS2_LAST_BL_DATE,
	INS3_LAST_BL_DATE,
	INS4_LAST_BL_DATE,
	INS1_LAST_PAID,
	INS2_LAST_PAID,
	INS3_LAST_PAID,
	INS4_LAST_PAID,
	BUCKET_INS_INDICATOR,
	BUCKET_INS_CODE,
	BUCKET_BALANCE,
	BUCKET_PAYER_HEALTH_PLAN,
	BUCKET_INS_CODE_LAST_BILLED_DATE,
	BUCKET_INS_CODE_LAST_EXPORTED_DATE,
	BUCKET_INS_CODE_LAST_FOLLOW_UP_DATE,
	ACCT_LAST_FOLLOW_UP_DATE,
	CLAIM_DELETED_IND,
	DEPARTMENT,
	INITIAL_DEPARTMENT = CASE
		WHEN DEPARTMENT = 'REVENUE, RECOVERY, RETENTION UNIT'
			THEN 'VARIANCE UNIT'
		WHEN DEPARTMENT = 'RIRV- REFERRAL PROCESS'
			THEN 'REVENUE INTEGRITY'
		WHEN WORKLISTED = 'NO'
			AND DEPARTMENT = 'DENIALS AND APPEALS'
			THEN 'DENIALS AND APPEALS PENDING'
		WHEN DEPARTMENT = 'GOVERNMENTAL BILLING'
			AND BUCKET_PAYER_HEALTH_PLAN = 'SELF PAY'
				THEN 'PATIENT BALANCE'
		WHEN DEPARTMENT = 'GOVERNMENTAL BILLING'
			AND BUCKET_PAYER_HEALTH_PLAN != 'SELF PAY'
			AND (
				(
					PT_REPRESENTATIVE IN ('117')
					AND ACCT_LAST_FOLLOW_UP_DATE >= DATEADD(DAY, - 63, DATEADD(DAY, -2, CAST(DATEADD(wk, DATEDIFF(wk, 0, GETDATE()), 0) AS DATE)))
				)
				OR (
					PT_REPRESENTATIVE IN ('107')
					AND ACCT_LAST_FOLLOW_UP_DATE >= DATEADD(DAY, - 34, DATEADD(DAY, -2, CAST(DATEADD(wk, DATEDIFF(wk, 0, GETDATE()), 0) AS DATE)))
				)
				OR (
					PT_REPRESENTATIVE IN ('103')
				)
			)
			THEN 'GOVERNMENTAL BILLING PENDING'
		WHEN DEPARTMENT IS NOT NULL
			-- NOT IN A VENDOR REP NUMBER
			AND PT_REPRESENTATIVE NOT IN ('500','501','502','503','570','571','572','573','590','591','592','593','780','781','782','783','530','531','532','533','721','722',
			-- BAD DEBT AG
			'744')
			AND (
				LEFT(BUCKET_INS_CODE, 1) NOT IN ('R','L','I','Q') -- EXCLUDE RESEARCH OR SPECIAL BILLING
				OR (
					LEFT(BUCKET_INS_CODE, 1) IN ('L','I','Q')
					AND DEPARTMENT != 'NON-GOVERNMENTAL BILLING'
				)
			)
			THEN UPPER(REPLACE(DEPARTMENT, '&',' AND '))
		WHEN IFPJOC IS NOT NULL
			THEN 'JOC'
		WHEN [FILE] = 'INHOUSE'
			THEN 'INHOUSE'
		WHEN [FILE] = 'DNFB'
			THEN 'DNFB'
		WHEN BUCKET_INS_INDICATOR = 'PT BALANCE'
			--AND PT_REPRESENTATIVE NOT IN ('500','501','502','503','570','571','572','573','590','591','592','593','780','781','782','783','530','531','532','533','721','722')
			AND IFPJOC IS NULL
			AND FC NOT LIKE 'X'
			AND [FILE] IN ('A/R')
			THEN 'PATIENT BALANCE'
		WHEN UNIT_NO IS NOT NULL
			AND BUCKET_INS_INDICATOR NOT IN ('PRIMARY','PT BALANCE')
			AND INS1_LAST_BL_DATE IS NOT NULL
			AND BUCKET_INS_CODE_LAST_BILLED_DATE >= DATEADD(DAY, - 42, DATEADD(DAY, -2, CAST(DATEADD(wk, DATEDIFF(wk, 0, GETDATE()), 0) AS DATE)))
			AND BUCKET_PAYER_HEALTH_PLAN NOT IN ('EMPLOYEE HEALTH','INSTITUTIONAL','MEDICAID FFS','MEDICARE FFS','NO FAULT','RESEARCH','SELF PAY','SPECIAL','WORKERS COMPENSATION')
			AND [FILE] IN ('A/R')
			THEN 'RECENTLY BILLED NON-GOVERNMENTAL UNITIZED FOLLOW UP PENDING'
		WHEN UNIT_NO IS NOT NULL
			AND BUCKET_INS_CODE_LAST_BILLED_DATE >= DATEADD(DAY, - 48, DATEADD(DAY, -2, CAST(DATEADD(wk, DATEDIFF(wk, 0, GETDATE()), 0) AS DATE)))
			AND BUCKET_PAYER_HEALTH_PLAN NOT IN ('EMPLOYEE HEALTH','INSTITUTIONAL','MEDICAID FFS','MEDICARE FFS','NO FAULT','RESEARCH','SELF PAY','SPECIAL','WORKERS COMPENSATION')
			AND [FILE] IN ('A/R')
			THEN 'RECENTLY BILLED NON-GOVERNMENTAL UNITIZED FOLLOW UP PENDING'
		WHEN BUCKET_INS_INDICATOR = 'PRIMARY'
			AND PT_REPRESENTATIVE NOT IN ('500','501','502','503','570','571','572','573','590','591','592','593','780','781','782','783','530','531','532','533','721','722')
			AND FC NOT LIKE '[0-9]' 
			AND FC NOT LIKE 'X'
			AND IFPJOC IS NULL
			AND BUCKET_INS_CODE_LAST_BILLED_DATE IS NULL
			AND BUCKET_INS_CODE_LAST_EXPORTED_DATE IS NULL
			AND ACCT_TYPE = 'OP'
			AND (
				UNIT_NO != '0'
				OR UNIT_NO IS NULL
			)
			AND LEFT(BUCKET_INS_CODE, 1) NOT IN ('L','I','Q','R')
			THEN 'OP UNBILLED'
		WHEN UNIT_NO = '0'
			AND ACCT_TYPE = 'OP'
			AND [FILE] IN ('A/R')
			AND IFPJOC IS NULL
			THEN 'OP OPEN UNIT'
		WHEN BUCKET_INS_CODE_LAST_EXPORTED_DATE >= DATEADD(DAY, - 34, DATEADD(DAY, -2, CAST(DATEADD(wk, DATEDIFF(wk, 0, GETDATE()), 0) AS DATE)))
			--AND BUCKET_PAYER_HEALTH_PLAN NOT IN ('EMPLOYEE HEALTH','INSTITUTIONAL','MEDICAID FFS','MEDICARE FFS', 'NO FAULT',' RESEARCH','SELF_PAY','SPECIAL','WORKERS COMPENSATION')
			AND BUCKET_PAYER_HEALTH_PLAN NOT IN ('MEDICAID FFS','MEDICARE FFS')
			AND PT_REPRESENTATIVE NOT IN ('500','501','502','503','570','571','572','573','590','591','592','593','780','781','782','783','530','531','532','533','721','722')
			AND FC NOT LIKE 'X'
			AND IFPJOC IS NULL
			AND [FILE] IN ('A/R')
			AND UNIT_NO IS NULL
			THEN 'RECENTLY BILLED NON-GOVERNMENTAL PENDING'
		WHEN (
			(
			BUCKET_PAYER_HEALTH_PLAN NOT IN ('EMPLOYEE HEALTH', 'INSTITUTIONAL', 'MEDICAID FFS', 'MEDICARE FFS','NO FAULT','RESEARCH','SELF PAY','SPECIAL','WORKERS COMPENSATION')
			AND BUCKET_INS_INDICATOR = 'PRIMARY'
			AND UNIT_NO IS NULL
			AND PYR1_PAY_AMT IS NULL
			AND PYR2_PAY_AMT IS NULL
			AND PYR3_PAY_AMT IS NULL
			AND PYR4_PAY_AMT IS NULL
			)
			OR (
				 BUCKET_PAYER_HEALTH_PLAN IN ('TRICARE','VA CCN','WORLD TRADE CENTER')
			)
			OR (
				BUCKET_INS_INDICATOR NOT IN ('PT_BALANCE','PRIMARY')
				AND BUCKET_PAYER_HEALTH_PLAN NOT IN ('EMPLOYEE HEALTH','INSTITUTIONAL','MEDICAID FFS','MEDICARE FFS','NO FAULT','RESEARCH','SELF PAY','SPECIAL','WORKERS COMPENSATION')
			)
		)
			AND BUCKET_INS_CODE_LAST_EXPORTED_DATE <= DATEADD(DAY, - 34, DATEADD(DAY, -2, CAST(DATEADD(wk, DATEDIFF(wk, 0, GETDATE()), 0) AS DATE)))
			AND BUCKET_INS_CODE_LAST_FOLLOW_UP_DATE >= DATEADD(DAY, - 34, DATEADD(DAY, -2, CAST(DATEADD(wk, DATEDIFF(wk, 0, GETDATE()), 0) AS DATE)))
			AND [FILE] IN ('A/R')
			AND IFPJOC IS NULL
			THEN 'NON-GOVERNMENTAL FOLLOW UP PENDING'
		WHEN LEFT(BUCKET_INS_CODE, 1) IN ('L','I','Q')
			AND BUCKET_INS_CODE_LAST_EXPORTED_DATE <= DATEADD(DAY, - 34, DATEADD(DAY, -2, CAST(DATEADD(wk, DATEDIFF(wk, 0, GETDATE()), 0) AS DATE)))
			AND BUCKET_INS_CODE_LAST_FOLLOW_UP_DATE >= DATEADD(DAY, - 34, DATEADD(DAY, -2, CAST(DATEADD(wk, DATEDIFF(wk, 0, GETDATE()), 0) AS DATE)))
			AND PT_REPRESENTATIVE NOT IN ('500','501','502','503','570','571','572','573','590','591','592','593','780','781','782','783','530','531','532','533','721','722')
			AND [FILE] IN ('A/R')
			AND IFPJOC IS NULL
			THEN 'SPECIAL BILLING PENDING'
		WHEN LEFT(BUCKET_INS_CODE, 1) IN ('L','I','Q')
			AND WORKLISTED = 'YES'
			AND DEPARTMENT = 'NON-GOVERNMENTAL BILLING'
			THEN 'SPECIAL BILLING'
		WHEN (
			(
				BUCKET_INS_INDICATOR = 'PRIMARY'
				AND UNIT_DATE IS NULL
				AND BUCKET_PAYER_HEALTH_PLAN NOT IN ('EMPLOYEE HEALTH', 'INSTITUTIONAL', 'MEDICAID FFS', 'MEDICARE FFS', 'NO FAULT', 'RESEARCH', 'SELF PAY', 'SPECIAL', 'WORKERS COMPENSATION', 'TRICARE', 'VA CCN', 'WORLD TRADE CENTER')
				AND PYR1_PAY_AMT IS NOT NULL
				AND BUCKET_INS_CODE_LAST_FOLLOW_UP_DATE >= DATEADD(DAY, - 34, DATEADD(DAY, -2, CAST(DATEADD(wk, DATEDIFF(wk, 0, GETDATE()), 0) AS DATE)))
			)
			OR (
				BUCKET_INS_INDICATOR = 'PRIMARY'
				AND UNIT_DATE IS NULL
				AND BUCKET_PAYER_HEALTH_PLAN NOT IN ('EMPLOYEE HEALTH', 'INSTITUTIONAL', 'MEDICAID FFS', 'MEDICARE FFS', 'NO FAULT', 'RESEARCH', 'SELF PAY', 'SPECIAL', 'WORKERS COMPENSATION', 'TRICARE', 'VA CCN', 'WORLD TRADE CENTER')
				AND PYR1_PAY_AMT IS NOT NULL
				AND BUCKET_INS_CODE_LAST_BILLED_DATE > INS1_LAST_PAID
			)
		)
			AND PT_REPRESENTATIVE NOT IN ('500','501','502','503','570','571','572','573','590','591','592','593','780','781','782','783','530','531','532','533','721','722')
			AND [FILE] IN ('A/R')
			AND IFPJOC IS NULL
			THEN 'VARIANCE UNIT PENDING'
		WHEN UNIT_NO IS NULL
			AND BUCKET_INS_CODE_LAST_EXPORTED_DATE >= DATEADD(DAY, - 34, DATEADD(DAY, -2, CAST(DATEADD(wk, DATEDIFF(wk, 0, GETDATE()), 0) AS DATE)))
			AND BUCKET_PAYER_HEALTH_PLAN IN ('MEDICARE FFS', 'MEDICAID FFS')
			AND [FILE] IN ('A/R')
			THEN 'RECENTLY BILLED GOVERNMENTAL PENDING'
		WHEN (
			(
				BUCKET_PAYER_HEALTH_PLAN NOT IN ('EMPLOYEE HEALTH','INSTITUTIONAL','MEDICAID FFS','MEDICARE FFS','NO FAULT','RESEARCH','SELF PAY','SPECIAL','WORKERS COMPENSATION')
				AND BUCKET_INS_CODE_LAST_FOLLOW_UP_DATE >= DATEADD(DAY, - 34, DATEADD(DAY, -2, CAST(DATEADD(wk, DATEDIFF(wk, 0, GETDATE()), 0) AS DATE)))
				AND BUCKET_INS_CODE_LAST_BILLED_DATE < DATEADD(DAY, - 48, DATEADD(DAY, -2, CAST(DATEADD(wk, DATEDIFF(wk, 0, GETDATE()), 0) AS DATE)))
			)
			OR (
				BUCKET_PAYER_HEALTH_PLAN NOT IN ('EMPLOYEE HEALTH','INSTITUTIONAL','MEDICAID FFS','MEDICARE FFS','NO FAULT','RESEARCH','SELF PAY','SPECIAL','WORKERS COMPENSATION')
				AND BUCKET_INS_CODE_LAST_BILLED_DATE > COALESCE(INS4_LAST_PAID, INS3_LAST_PAID, INS2_LAST_PAID, INS1_LAST_PAID)
			)
		)
			AND UNIT_DATE IS NOT NULL
			AND UNIT_NO IS NOT NULL
			AND [FILE] IN ('A/R')
			THEN 'UNITIZED FOLLOW UP PENDING'
		WHEN BUCKET_INS_CODE_LAST_EXPORTED_DATE IS NULL
			AND BUCKET_INS_CODE_LAST_BILLED_DATE IS NOT NULL
			AND CLAIM_DELETED_IND = '0'
			AND PT_REPRESENTATIVE IN ('','0','000')
			AND [FILE] IN ('A/R')
			AND BUCKET_INS_INDICATOR != 'PT BALANCE'
			AND WORKLISTED = 'NO'
			AND IFPJOC IS NULL
			AND BUCKET_PAYER_HEALTH_PLAN NOT IN ('MEDICAID FFS','MEDICARE FFS','SELF PAY')
			THEN 'NON-GOVERNMENTAL SCRUBBER'
		WHEN BUCKET_INS_CODE_LAST_EXPORTED_DATE IS NULL
			AND BUCKET_INS_CODE_LAST_BILLED_DATE IS NOT NULL
			AND CLAIM_DELETED_IND = '1'
			AND PT_REPRESENTATIVE IN ('','0','000')
			AND [FILE] IN ('A/R')
			AND BUCKET_INS_INDICATOR != 'PT BALANCE'
			AND WORKLISTED = 'NO'
			AND IFPJOC IS NULL
			AND BUCKET_PAYER_HEALTH_PLAN NOT IN ('MEDICAID FFS','MEDICARE FFS','SELF PAY')
			THEN 'NON-GOVERNMENTAL DELETED FROM SCRUBBER'
		WHEN BUCKET_INS_CODE_LAST_EXPORTED_DATE IS NULL
			AND BUCKET_INS_CODE_LAST_BILLED_DATE IS NOT NULL
			AND CLAIM_DELETED_IND = '0'
			AND PT_REPRESENTATIVE IN ('','0','000')
			AND [FILE] IN ('A/R')
			AND BUCKET_INS_INDICATOR != 'PT BALANCE'
			AND WORKLISTED = 'NO'
			AND IFPJOC IS NULL
			AND BUCKET_PAYER_HEALTH_PLAN IN ('MEDICAID FFS','MEDICARE FFS')
			THEN 'GOVERNMENTAL SCRUBBER'
		WHEN BUCKET_INS_CODE_LAST_EXPORTED_DATE IS NULL
			AND BUCKET_INS_CODE_LAST_BILLED_DATE IS NOT NULL
			AND CLAIM_DELETED_IND = '1'
			AND PT_REPRESENTATIVE IN ('','0','000')
			AND [FILE] IN ('A/R')
			AND BUCKET_INS_INDICATOR != 'PT BALANCE'
			AND WORKLISTED = 'NO'
			AND IFPJOC IS NULL
			AND BUCKET_PAYER_HEALTH_PLAN IN ('MEDICAID FFS','MEDICARE FFS')
			THEN 'GOVERNMENTAL DELETED FROM SCRUBBER'
		WHEN BUCKET_INS_CODE IS NULL
			THEN 'INSURANCE VERIFICATION'
		-- SELF PAY
		WHEN BUCKET_INS_CODE_LAST_EXPORTED_DATE IS NULL
			AND BUCKET_INS_CODE_LAST_BILLED_DATE IS NOT NULL
			AND CLAIM_DELETED_IND = '0'
			AND PT_REPRESENTATIVE IN ('','0','000')
			AND [FILE] IN ('A/R')
			AND BUCKET_INS_INDICATOR != 'PT BALANCE'
			AND WORKLISTED = 'NO'
			AND IFPJOC IS NULL
			AND BUCKET_PAYER_HEALTH_PLAN IN ('SELF PAY')
			THEN 'SELF PAY SCRUBBER'
		WHEN BUCKET_INS_CODE_LAST_EXPORTED_DATE IS NULL
			AND BUCKET_INS_CODE_LAST_BILLED_DATE IS NOT NULL
			AND CLAIM_DELETED_IND = '1'
			AND PT_REPRESENTATIVE IN ('','0','000')
			AND [FILE] IN ('A/R')
			AND BUCKET_INS_INDICATOR != 'PT BALANCE'
			AND WORKLISTED = 'NO'
			AND IFPJOC IS NULL
			AND BUCKET_PAYER_HEALTH_PLAN IN ('SELF PAY')
			THEN 'SELF PAY DELETED FROM SCRUBBER'
		--
		WHEN BUCKET_INS_CODE_LAST_EXPORTED_DATE IS NULL
			AND BUCKET_INS_CODE_LAST_BILLED_DATE IS NOT NULL
			AND CLAIM_DELETED_IND = '0'
			AND PT_REPRESENTATIVE IN ('','0','000')
			AND [FILE] IN ('A/R')
			AND BUCKET_INS_INDICATOR != 'PT BALANCE'
			AND WORKLISTED = 'NO'
			AND IFPJOC IS NULL
			THEN 'SCRUBBER'
		WHEN BUCKET_INS_CODE_LAST_EXPORTED_DATE IS NULL
			AND BUCKET_INS_CODE_LAST_BILLED_DATE IS NOT NULL
			AND CLAIM_DELETED_IND = '1'
			AND PT_REPRESENTATIVE IN ('','0','000')
			AND [FILE] IN ('A/R')
			AND BUCKET_INS_INDICATOR != 'PT BALANCE'
			AND WORKLISTED = 'NO'
			AND IFPJOC IS NULL
			THEN 'DELETED FROM SCRUBBER'
		WHEN PT_REPRESENTATIVE IN ('590','591','593')
			AND [FILE] IN ('A/R')
			THEN 'MEDCO'
		WHEN PT_REPRESENTATIVE IN ('570','571','573')
			AND [FILE] IN ('A/R')
			THEN 'RTR'
		WHEN LEFT(BUCKET_INS_CODE, 1) = 'H'
			AND PT_REPRESENTATIVE NOT IN ('530','531','533')
			AND BUCKET_BALANCE != 0
			AND [FILE] IN ('A/R')
			THEN 'SELF PAY AND FINANCIAL ASSIST'
		WHEN PT_REPRESENTATIVE IN ('532','782','572','592','722','502')
			AND WORKLIST IN (
				'400002','400007','400008','400018','400021','400022','400041',
				'400042','400829','401165','50PR01','510140','510145','510150',
				'510155','511140','511145','511150','511155','520140','520145',
				'520150','520155','521140','521145','521150','522151','522155'
			)
			AND [FILE] IN ('A/R')
			THEN 'VENDOR MANAGEMENT'
		WHEN LEFT(BUCKET_INS_CODE, 1) = 'R'
			THEN 'RESEARCH'

		WHEN PT_REPRESENTATIVE IN ('618','619','620')
			AND [FILE] IN ('A/R')
			THEN 'SCA UNIT PENDING'
		WHEN (
				PT_REPRESENTATIVE IN ('781','780','783')
				OR FC = '9'
			)
			AND FC != 'X'
			AND [FILE] NOT IN ('INHOUSE', 'DNFB')
			THEN 'KOPP GROUP'
		WHEN PT_REPRESENTATIVE IN ('125','126','127','128','129','130')
			THEN 'TRANSFER BILLING'
		WHEN PT_REPRESENTATIVE IN ('110','115','116')
			AND BUCKET_INS_CODE_LAST_FOLLOW_UP_DATE >= DATEADD(DAY, - 27, DATEADD(DAY, -2, CAST(DATEADD(wk, DATEDIFF(wk, 0, GETDATE()), 0) AS DATE)))
			THEN 'AUDIT COORDINATOR PENDING'
		WHEN PT_REPRESENTATIVE IN ('110','115','116')
			AND [FILE] IN ('A/R')
			THEN 'AUDIT COORDINATOR'
		WHEN PT_REPRESENTATIVE IN ('500','501','503')
			AND [FILE] IN ('A/R')
			THEN 'MED-METRIX'
		WHEN PT_REPRESENTATIVE IN ('530','531','533')
			AND [FILE] IN ('A/R', 'INHOUSE', 'DNFB')
			THEN 'JZANUS MEDICAID APPLICATIONS'
		WHEN PT_REPRESENTATIVE IN ('156')
			AND [FILE] NOT IN ('INHOUSE', 'DNFB')
			THEN 'ANALYST TEAM'
		WHEN PT_REPRESENTATIVE IN ('721','744')
			AND DEPARTMENT = 'BAD DEBT VENDORS'
			AND [FILE] NOT IN ('INHOUSE', 'DNFB')
			THEN 'NYAG'
		WHEN BUCKET_INS_CODE_LAST_EXPORTED_DATE IS NULL
			AND (
				INS1_LAST_PAID >= DATEADD(DAY, -30, GETDATE())
				OR INS1_LAST_PAID IS NULL
			)
			AND BUCKET_INS_INDICATOR NOT IN ('PRIMARY','PT BALANCE')
			AND BUCKET_PAYER_HEALTH_PLAN IN ('MEDICAID FFS','MEDICARE FFS')
			THEN 'GOVERNMENTAL RECENTLY QUALIFIED SECONDARY BALANCES'
		WHEN BUCKET_INS_CODE_LAST_EXPORTED_DATE IS NULL
			AND (
				INS1_LAST_PAID >= DATEADD(DAY, -30, GETDATE())
				OR INS1_LAST_PAID IS NULL
			)
			AND BUCKET_INS_INDICATOR NOT IN ('PRIMARY','PT BALANCE')
			AND BUCKET_PAYER_HEALTH_PLAN NOT IN ('MEDICAID FFS','MEDICARE FFS')
			THEN 'NON-GOVERNMENTAL RECENTLY QUALIFIED SECONDARY BALANCES'
		WHEN BUCKET_PAYER_HEALTH_PLAN IN ('MEDICARE FFS','MEDICAID FFS')
			AND DEPARTMENT IS NULL
			AND BUCKET_INS_CODE_LAST_BILLED_DATE IS NOT NULL
			AND BUCKET_INS_CODE_LAST_FOLLOW_UP_DATE >= DATEADD(DAY, - 34, DATEADD(DAY, -2, CAST(DATEADD(wk, DATEDIFF(wk, 0, GETDATE()), 0) AS DATE)))
			THEN 'GOVERNMENTAL FOLLOW UP PENDING'
		END,
	[RESPONSIBLE COLLECTOR],
	SUPERVISOR,
	EXPECTED_PAYMENT
INTO #INITIAL_DEPARTMENT_TBL
FROM #INDICATOR_TBL;

-- DEPARTMENT UPDATES BASED ON OTHER THINGS
DROP TABLE IF EXISTS #DEPARTMENT_UPDATE_TBL;
SELECT PT_NO,
	UNIT_NO,
	UNIT_DATE,
	ADMIT_DATE,
	DSCH_DATE,
	BALANCE,
	PT_BALANCE,
	INS1_BALANCE,
	INS2_BALANCE,
	INS3_BALANCE,
	INS4_BALANCE,
	PYR1_PAY_AMT,
	PYR2_PAY_AMT,
	PYR3_PAY_AMT,
	PYR4_PAY_AMT,
	[FILE],
	AGE_BUCKET,
	INS1_CD,
	INS2_CD,
	INS3_CD,
	INS4_CD,
	[WORKLIST NAME ON INS1],
	[WORKLIST NAME ON INS2],
	[WORKLIST NAME ON INS3],
	[WORKLIST NAME ON INS4],
	[Worklist NAME ON PT],
	[ASSIGNED_WORKLIST_ID],
	WORKLISTED,
	FC,
	PT_REPRESENTATIVE,
	ACCT_TYPE,
	FIRST_INS_BL_DATE,
	[1ST_BL_EXPORTED_DATE],
	[LAST ACTIVITY CODE],
	[LAST ACTIVITY DATE],
	PAYER_ORGANIZATION,
	PRODUCT_CLASS,
	IFPJOC,
	WORKLIST,
	[WORKLIST NAME],
	INS1_LAST_BL_DATE,
	INS2_LAST_BL_DATE,
	INS3_LAST_BL_DATE,
	INS4_LAST_BL_DATE,
	INS1_LAST_PAID,
	INS2_LAST_PAID,
	INS3_LAST_PAID,
	INS4_LAST_PAID,
	BUCKET_INS_INDICATOR,
	BUCKET_INS_CODE,
	BUCKET_BALANCE,
	BUCKET_PAYER_HEALTH_PLAN,
	BUCKET_INS_CODE_LAST_BILLED_DATE,
	BUCKET_INS_CODE_LAST_EXPORTED_DATE,
	BUCKET_INS_CODE_LAST_FOLLOW_UP_DATE,
	ACCT_LAST_FOLLOW_UP_DATE,
	CLAIM_DELETED_IND,
	DEPARTMENT,
	INITIAL_DEPARTMENT,
	DEPARTMENT_UPDATED = CASE
		WHEN INITIAL_DEPARTMENT = 'PFS-NOWORK'
			AND BUCKET_INS_INDICATOR = 'PRIMARY'
			AND PAYER_ORGANIZATION NOT IN ('EMPLOYEE HEALTH', 'INSTITUTIONAL', 'MEDICAID FFS', 'MEDICARE FFS', 'NO FAULT', 'RESEARCH', 'SELF PAY', 'SPECIAL', 'WORKERS COMPENSATION', 'TRICARE', 'VA CCN', 'WORLD TRADE CENTER')
			AND PYR1_PAY_AMT IS NOT NULL
			AND PT_REPRESENTATIVE IN ('','0','00')
			AND UNIT_NO IS NULL
			AND IFPJOC IS NULL
			THEN 'VARIANCE UNIT PENDING'
		WHEN INITIAL_DEPARTMENT = 'PFS-NOWORK'
			AND BUCKET_INS_INDICATOR = 'PRIMARY'
			AND PAYER_ORGANIZATION NOT IN ('EMPLOYEE HEALTH', 'INSTITUTIONAL', 'MEDICAID FFS', 'MEDICARE FFS', 'NO FAULT', 'RESEARCH', 'SELF PAY', 'SPECIAL', 'WORKERS COMPENSATION', 'TRICARE', 'VA CCN', 'WORLD TRADE CENTER')
			AND PYR1_PAY_AMT IS NULL
			AND PT_REPRESENTATIVE IN ('','0','00')
			AND UNIT_NO IS NULL
			AND IFPJOC IS NULL
			THEN 'NON-GOVERNMENTAL FOLLOW UP PENDING'
		WHEN INITIAL_DEPARTMENT = 'PFS-NOWORK'
			AND BUCKET_INS_INDICATOR = 'PRIMARY'
			AND PAYER_ORGANIZATION IN ('MEDICAID FFS','MEDICARE FFS')
			AND PYR1_PAY_AMT IS NULL
			AND PT_REPRESENTATIVE IN ('','0','000')
			AND IFPJOC IS NULL
			THEN 'GOVERNMENTAL-NO WORK'
		WHEN INITIAL_DEPARTMENT = 'PFS-NOWORK'
			AND BUCKET_INS_INDICATOR = 'PRIMARY'
			AND PAYER_ORGANIZATION IN ('INSTITUTIONAL','SPECIAL')
			AND PT_REPRESENTATIVE IN ('','0','000')
			AND IFPJOC IS NULL
			THEN 'SPECIAL BILLING'
		WHEN INITIAL_DEPARTMENT = 'PFS-NOWORK'
			AND BUCKET_INS_INDICATOR = 'PRIMARY'
			AND PAYER_ORGANIZATION IN ('NO FAULT', 'WORKERS COMPENSATION')
			AND PYR1_PAY_AMT IS NULL
			AND PT_REPRESENTATIVE IN ('', '0', '000')
			AND IFPJOC IS NULL
			THEN 'NO FAULT/WORKERS COMP-NO WORK'
		WHEN INITIAL_DEPARTMENT = 'PFS-NOWORK'
			AND BUCKET_INS_INDICATOR = 'PRIMARY'
			AND PAYER_ORGANIZATION IN ('EMPLOYEE HEALTH')
			AND PT_REPRESENTATIVE IN ('', '0', '000')
			AND IFPJOC IS NULL
			THEN 'EMPLOYEE HEALTH-NO WORK'
		WHEN INITIAL_DEPARTMENT = 'PFS-NOWORK'
			AND BUCKET_INS_INDICATOR = 'PRIMARY'
			AND PAYER_ORGANIZATION IN ('RESEARCH')
			AND PT_REPRESENTATIVE IN ('', '0', '000')
			AND IFPJOC IS NULL
			THEN 'RESEARCH-NO WORK'
		WHEN INITIAL_DEPARTMENT = 'PFS-NOWORK'
			AND (
				UNIT_NO IS NULL
				AND LEFT([BUCKET_INS_CODE], 1) IN ('C', 'G', 'J', 'M', 'N', 'O', 'P', 'U', 'Y')
				)
			OR ([BUCKET_INS_CODE] IN ('L60', 'L45'))
			THEN 'NON-GOVERNMENTAL FOLLOW UP PENDING'
		WHEN (
				INITIAL_DEPARTMENT = 'PFS-NOWORK'
				OR DEPARTMENT = 'PFS-NOWORK'
			)
			AND WORKLIST = '400060' -- AMBULANCE NO WORK
			THEN 'NON-GOVERNMENTAL FOLLOW UP PENDING'
		WHEN INITIAL_DEPARTMENT = 'PFS-NOWORK'
			AND UNIT_NO IS NOT NULL
			AND LEFT([BUCKET_INS_CODE], 1) IN ('C', 'G', 'J', 'M', 'N', 'O', 'P', 'U', 'Y')
			THEN 'UNITIZED FOLLOW UP-NO WORK'
		WHEN INITIAL_DEPARTMENT = 'PFS-NOWORK'
			AND LEFT([BUCKET_INS_CODE], 1) IN ('L', 'I', 'Q')
			AND [BUCKET_INS_CODE] NOT IN ('L60', 'L45')
			THEN 'SPECIAL BILLING PENDING'
		WHEN WORKLISTED = 'NO'
			AND AGE_BUCKET = '1_0-30'
			AND LEFT(BUCKET_INS_CODE, 1) IN ('L','I','Q')
			THEN 'RECENTLY BILLED SPECIAL BILLING'
		WHEN INITIAL_DEPARTMENT = 'PFS-NOWORK'
			AND LEFT([BUCKET_INS_CODE], 1) IN ('A', 'B', 'D')
			THEN 'GOVERNMENTAL-NO WORK'
		WHEN INITIAL_DEPARTMENT = 'PFS-NOWORK'
			AND BUCKET_INS_INDICATOR = 'PT BALANCE'
			THEN 'SELF PAY AND FINANCIAL ASSIST.'
		WHEN PT_REPRESENTATIVE NOT IN ('','0','000')
			THEN INITIAL_DEPARTMENT
		ELSE INITIAL_DEPARTMENT
		END,
	[RESPONSIBLE COLLECTOR],
	SUPERVISOR,
	EXPECTED_PAYMENT
INTO #DEPARTMENT_UPDATE_TBL
FROM #INITIAL_DEPARTMENT_TBL;

SELECT A.PT_NO,
	A.UNIT_NO,
	A.UNIT_DATE,
	A.ADMIT_DATE,
	A.DSCH_DATE,
	A.BALANCE,
	[GT_5K] = CASE WHEN A.BALANCE >= 5000 THEN 1 ELSE 0 END,
	[DOLLARS>120_DAYS] = CASE WHEN Age_Bucket IN ('5_121-150','6_151-180','7_181-210','8_211-240','9_241-365','90_1yr-1.5yrs','91_1.5-2yrs','92_2+yrs') THEN Balance ELSE 0 END,
	A.PT_BALANCE,
	A.INS1_BALANCE,
	A.INS2_BALANCE,
	A.INS3_BALANCE,
	A.INS4_BALANCE,
	A.PYR1_PAY_AMT,
	A.PYR2_PAY_AMT,
	A.PYR3_PAY_AMT,
	A.PYR4_PAY_AMT,
	A.[FILE],
	A.AGE_BUCKET,
	A.INS1_CD,
	A.INS2_CD,
	A.INS3_CD,
	A.INS4_CD,
	[WORKLIST NAME ON INS1],
	[WORKLIST NAME ON INS2],
	[WORKLIST NAME ON INS3],
	[WORKLIST NAME ON INS4],
	[WORKLIST NAME ON PT],
	[ASSIGNED_WORKLIST_ID],
	WORKLISTED,
	FC,
	PT_REPRESENTATIVE,
	ACCT_TYPE,
	FIRST_INS_BL_DATE,
	[1ST_BL_EXPORTED_DATE],
	[LAST ACTIVITY CODE],
	[LAST ACTIVITY DATE],
	PAYER_ORGANIZATION,
	PRODUCT_CLASS,
	IFPJOC,
	WORKLIST,
	[WORKLIST NAME],
	INS1_LAST_BL_DATE,
	INS2_LAST_BL_DATE,
	INS3_LAST_BL_DATE,
	INS4_LAST_BL_DATE,
	INS1_LAST_PAID,
	INS2_LAST_PAID,
	INS3_LAST_PAID,
	INS4_LAST_PAID,
	BUCKET_INS_INDICATOR,
	BUCKET_INS_CODE,
	BUCKET_BALANCE,
	BUCKET_PAYER_HEALTH_PLAN,
	BUCKET_INS_CODE_LAST_BILLED_DATE,
	BUCKET_INS_CODE_LAST_EXPORTED_DATE,
	BUCKET_INS_CODE_LAST_FOLLOW_UP_DATE,
	ACCT_LAST_FOLLOW_UP_DATE,
	CLAIM_DELETED_IND,
	DEPARTMENT,
	INITIAL_DEPARTMENT,
	DEPARTMENT_UPDATED,
	DEPARTMENT_CLEAN = CASE
		WHEN DEPARTMENT_UPDATED IN (
			'SELF PAY DELETED FROM SCRUBBER',
			'SELF PAY SCRUBBER'
		)
			THEN 'SELF PAY AND FINANCIAL ASSIST'
		WHEN DEPARTMENT_UPDATED IN ('GOVERNMENTAL BILLING', 'GOVERNMENTAL DELETED FROM SCRUBBER', 'GOVERNMENTAL SCRUBBER',
									'GOVERNMENTAL FOLLOW UP', 'GOVERNMENTAL RECENTLY QUALIFIED SECONDARY BALANCES', 
									'RECENTLY BILLED GOVERNMENTAL','GOVERNMENTAL FOLLOW UP PENDING', 'RECENTLY BILLED GOVERNMENTAL PENDING')
			THEN 'GOVERNMENTAL BILLING'
		WHEN DEPARTMENT_UPDATED IN ('NON-GOVERNMENTAL BILLING', 'NON-GOVERNMENTAL DELETED FROM SCRUBBER', 'NON-GOVERNMENTAL SCRUBBER')
			THEN 'NON-GOVERNMENTAL BILLING'
		WHEN DEPARTMENT_UPDATED IN ('NON-GOVERNMENTAL FOLLOW UP', 'NON-GOVERNMENTAL RECENTLY QUALIFIED SECONDARY BALANCES', 'RECENTLY BILLED NON-GOVERNMENTAL',
									'RECENTLY BILLED NON-GOVERNMENTAL PENDING')
			THEN 'NON-GOVERNMENTAL FOLLOW UP'
		WHEN DEPARTMENT_UPDATED IN ('DELETED FROM SCRUBBER', 'SCRUBBER')
			THEN 'SCRUBBER'
		WHEN DEPARTMENT_UPDATED IN ('RECENTLY BILLED SPECIAL BILLING', 'SPECIAL BILLING')
			THEN 'SPECIAL BILLING'
		WHEN DEPARTMENT_UPDATED IN ('RECENTLY BILLED NON-GOVERNMENTAL UNITIZED FOLLOW UP', 'UNITIZED FOLLOW UP', 'UNITIZED FOLLOW UP-NO WORK',
									'RECENTLY BILLED NON-GOVERNMENTAL UNITIZED FOLLOW UP PENDING')
			THEN 'UNITIZED FOLLOW UP'
		ELSE UPPER(LTRIM(RTRIM(REPLACE(REPLACE(DEPARTMENT_UPDATED, 'PENDING',''),'.',''))))
		END,
	[RESPONSIBLE COLLECTOR],
	SUPERVISOR,
	[WORKABLE_INDICATOR] = CASE
		WHEN DEPARTMENT_UPDATED IN (
			'RECENTLY BILLED NON-GOVERNMENTAL PENDING',
			'RECENTLY BILLED NON-GOVERNMENTAL UNITIZED FOLLOW UP PENDING',
			'RECENTLY BILLED GOVERNMENTAL PENDING',
			'RECENTLY BILLED SPECIAL BILLING',
			'GOVERNMENTAL RECENTLY QUALIFIED SECONDARY BALANCES',
			'NON-GOVERNMENTAL RECENTLY QUALIFIED SECONDARY BALANCES',
			'SELF PAY DELETED FROM SCRUBBER',
			'SELF PAY SCRUBBER'
		)
			THEN 'RECENTLY_BILLED'
		WHEN DEPARTMENT_UPDATED = 'OP UNBILLED'
			THEN 'INHOUSE_DNFB'
		WHEN DEPARTMENT_UPDATED LIKE '%SCRUBBER%'
			THEN 'WORKABLE'
		WHEN DEPARTMENT_UPDATED LIKE '%PENDING%'
			THEN 'WORKABLE_PENDING'
		WHEN Pt_REPRESENTATIVE IN ('116','401','408','480','101','102','112','104','110','115','250','300',
									'105','106','107','108','200','201','202','203','204','205','206','207',
									'208','249','251','253','302','350','861')
			AND ACCT_LAST_FOLLOW_UP_DATE >= DATEADD(DAY, - 27, DATEADD(DAY, -2, CAST(DATEADD(wk, DATEDIFF(wk, 0, GETDATE()), 0) AS DATE)))
			THEN 'WORKABLE_PENDING'
		WHEN DEPARTMENT_UPDATED = 'NON-GOVERNMENTAL FOLLOW UP'
			AND ACCT_LAST_FOLLOW_UP_DATE >= DATEADD(DAY, - 27, DATEADD(DAY, -2, CAST(DATEADD(wk, DATEDIFF(wk, 0, GETDATE()), 0) AS DATE)))
			AND WORKLISTED = 'NO'
			THEN 'WORKABLE_PENDING'
		WHEN DEPARTMENT_UPDATED IN ('SCA UNIT')
			AND WORKLISTED = 'NO'
			AND PT_REPRESENTATIVE IN ('618','619','620')
			THEN 'WORKABLE_PENDING'
		WHEN DEPARTMENT_UPDATED IN ('INSURANCE VERIFICATION')
			AND WORKLISTED = 'NO'
			AND PT_REPRESENTATIVE IN ('350')
			THEN 'WORKABLE_PENDING'
		WHEN DEPARTMENT_UPDATED IN ('INSURANCE VERIFICATION')
			AND WORKLISTED = 'NO'
			AND PT_REPRESENTATIVE IN ('351','352','353','354')
			THEN 'WORKABLE'
		WHEN DEPARTMENT_UPDATED IN ('JOC')
			AND WORKLISTED = 'NO'
			AND PT_REPRESENTATIVE IN ('662','690')
			THEN 'WORKABLE_PENDING'
		WHEN DEPARTMENT_UPDATED IN ('RESEARCH')
			AND WORKLISTED = 'NO'
			THEN 'WORKABLE_PENDING'
		WHEN DEPARTMENT_UPDATED IN ('TRANSFER BILLING')
			AND WORKLISTED = 'NO'
			THEN 'WORKABLE_PENDING'
		WHEN DEPARTMENT_UPDATED IN ('AUDIT COORDINATOR')
			AND WORKLISTED = 'NO'
			AND PT_REPRESENTATIVE IN ('110','115','116')
			THEN 'WORKABLE'
		WHEN DEPARTMENT_UPDATED IN ('GOVERNMENTAL BILLING')
			AND WORKLISTED = 'NO'
			AND PT_REPRESENTATIVE IN (
				'101','102','103','104','105','106','107','108','109','111','112','117'
			)
			THEN 'WORKABLE'
		WHEN WORKLISTED = 'YES'
			THEN 'WORKABLE'
		WHEN DEPARTMENT_UPDATED IN ('INHOUSE','DNFB','OP OPEN UNIT')
			THEN 'INHOUSE_DNFB'
		WHEN WORKLISTED = 'NO'
			AND UPPER(LTRIM(RTRIM(REPLACE(REPLACE(DEPARTMENT_UPDATED, 'PENDING',''),'.','')))) IS NULL
			AND [FILE] != 'BAD DEBT'
			THEN 'NEEDS_REVIEW'
		WHEN WORKLISTED = 'NO'
			THEN 'NOT_WORKABLE'
		ELSE 'NEEDS_REVIEW'
		END,
		EXPECTED_PAYMENT,
		CYCLE_OF_WL = WL_CYCLES.[Cycle of WL]
FROM #DEPARTMENT_UPDATE_TBL AS A
LEFT JOIN (
	SELECT DISTINCT PT_NO,
		UNIT_NO,
		UNIT_DATE,
		[Cycle of WL],
		[WL status]
	FROM SMS.DBO.Pt_Accounting_Reporting_Alt_WL_Cycles
) AS WL_CYCLES ON A.Pt_No = WL_CYCLES.Pt_No
	AND ISNULL(A.UNIT_DATE, '') = ISNULL(WL_CYCLES.Unit_Date, '')
	AND A.UNIT_NO = WL_CYCLES.UNIT_NO
